# Generated by the Waxeye Parser Generator - version 0.8.0
# www.waxeye.org

from waxeye import Edge, State, FA, WaxeyeParser

class Parser (WaxeyeParser):
    start = 0
    eof_check = True
    automata = [FA("stmt_list", [State([Edge(1, 0, False),
                Edge(48, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("statement", [State([Edge(48, 1, False)], False),
            State([Edge(6, 2, False),
                Edge(7, 3, False),
                Edge(8, 4, False),
                Edge(5, 2, False),
                Edge(12, 2, False),
                Edge(14, 2, False),
                Edge(13, 5, False),
                Edge(20, 6, False)], False),
            State([], True),
            State([Edge(";", 2, True)], False),
            State([Edge(";", 2, True)], False),
            State([Edge(";", 2, True)], False),
            State([Edge(";", 2, True)], False)], FA.PRUNE),
        FA("comment_ln", [State([Edge("/", 1, False)], False),
            State([Edge("/", 2, False)], False),
            State([Edge(50, 3, False)], True),
            State([Edge(-1, 2, False)], False)], FA.VOID),
        FA("comment_bl", [State([Edge("/", 1, False)], False),
            State([Edge("*", 2, False)], False),
            State([Edge(51, 3, False),
                Edge("*", 4, False)], False),
            State([Edge(-1, 2, False)], False),
            State([Edge("/", 5, False)], False),
            State([], True)], FA.VOID),
        FA("comment", [State([Edge(2, 1, False),
                Edge(3, 1, False)], False),
            State([], True)], FA.VOID),
        FA("if", [State([Edge("i", 1, True)], False),
            State([Edge("f", 2, True)], False),
            State([Edge(48, 3, False)], False),
            State([Edge("(", 4, True)], False),
            State([Edge(20, 5, False)], False),
            State([Edge(")", 6, True)], False),
            State([Edge(48, 7, False)], False),
            State([Edge(1, 8, False)], False),
            State([Edge(48, 9, False)], False),
            State([Edge("e", 10, True)], True),
            State([Edge("l", 11, True)], False),
            State([Edge("s", 12, True)], False),
            State([Edge("e", 13, True)], False),
            State([Edge(48, 14, False)], False),
            State([Edge(1, 15, False)], False),
            State([Edge(48, 16, False)], False),
            State([], True)], FA.LEFT),
        FA("block", [State([Edge("{", 1, True)], False),
            State([Edge(1, 2, False),
                Edge(48, 3, False)], False),
            State([Edge(48, 3, False)], False),
            State([Edge("}", 4, True)], False),
            State([Edge(48, 5, False)], False),
            State([], True)], FA.LEFT),
        FA("assignment", [State([Edge(20, 1, False),
                Edge(8, 1, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge("=", 3, True)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(20, 5, False)], False),
            State([], True)], FA.LEFT),
        FA("definition", [State([Edge(10, 1, False)], False),
            State([Edge(49, 2, False)], False),
            State([Edge(39, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("deflist", [State([Edge(8, 1, False),
                Edge(48, 4, False)], False),
            State([Edge(",", 2, True)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(8, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("identifier", [State([Edge([(65, 90), "_", (97, 122)], 1, False)], False),
            State([Edge([(48, 57), (65, 90), "_", (97, 122)], 1, False)], True)], FA.LEFT),
        FA("list", [State([Edge(20, 1, False),
                Edge(48, 4, False)], False),
            State([Edge(",", 2, True)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(20, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("fun", [State([Edge("f", 1, True)], False),
            State([Edge("u", 2, True)], False),
            State([Edge("n", 3, True)], False),
            State([Edge(49, 4, False)], False),
            State([Edge(10, 5, False)], False),
            State([Edge(48, 6, False)], False),
            State([Edge(39, 7, False)], False),
            State([Edge(48, 8, False)], False),
            State([Edge("{", 9, True)], False),
            State([Edge(0, 10, False)], False),
            State([Edge(48, 11, False)], False),
            State([Edge("}", 12, True)], False),
            State([Edge(48, 13, False)], False),
            State([], True)], FA.LEFT),
        FA("return", [State([Edge("r", 1, True)], False),
            State([Edge("e", 2, True)], False),
            State([Edge("t", 3, True)], False),
            State([Edge("u", 4, True)], False),
            State([Edge("r", 5, True)], False),
            State([Edge("n", 6, True)], False),
            State([Edge(49, 7, False)], False),
            State([Edge(20, 8, False)], False),
            State([], True)], FA.LEFT),
        FA("class", [State([Edge("c", 1, True)], False),
            State([Edge("l", 2, True)], False),
            State([Edge("a", 3, True)], False),
            State([Edge("s", 4, True)], False),
            State([Edge("s", 5, True)], False),
            State([Edge(49, 6, False)], False),
            State([Edge(10, 7, False)], False),
            State([Edge(49, 8, False),
                Edge(48, 17, False)], False),
            State([Edge("e", 9, False)], False),
            State([Edge("x", 10, False)], False),
            State([Edge("t", 11, False)], False),
            State([Edge("e", 12, False)], False),
            State([Edge("n", 13, False)], False),
            State([Edge("d", 14, False)], False),
            State([Edge("s", 15, False)], False),
            State([Edge(10, 16, False)], False),
            State([Edge(48, 17, False)], False),
            State([Edge("{", 18, True)], False),
            State([Edge(19, 19, False)], False),
            State([Edge(48, 20, False)], False),
            State([Edge("}", 21, True)], False),
            State([Edge(48, 22, False)], False),
            State([], True)], FA.LEFT),
        FA("cls_assign", [State([Edge(16, 1, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge("=", 3, True)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(20, 5, False)], False),
            State([], True)], FA.LEFT),
        FA("cls_def", [State([Edge("s", 1, False),
                Edge(49, 7, False),
                Edge("p", 11, False)], False),
            State([Edge("t", 2, False)], False),
            State([Edge("a", 3, False)], False),
            State([Edge("t", 4, False)], False),
            State([Edge("i", 5, False)], False),
            State([Edge("c", 6, False)], False),
            State([Edge(49, 7, False)], False),
            State([Edge(10, 8, False)], False),
            State([Edge(49, 9, False)], False),
            State([Edge(39, 10, False)], False),
            State([], True),
            State([Edge("u", 12, False)], False),
            State([Edge("b", 13, False)], False),
            State([Edge(49, 7, False)], False)], FA.LEFT),
        FA("cls_fun", [State([Edge("s", 1, False),
                Edge(49, 7, False),
                Edge("p", 21, False)], False),
            State([Edge("t", 2, False)], False),
            State([Edge("a", 3, False)], False),
            State([Edge("t", 4, False)], False),
            State([Edge("i", 5, False)], False),
            State([Edge("c", 6, False)], False),
            State([Edge(49, 7, False)], False),
            State([Edge("f", 8, True)], False),
            State([Edge("u", 9, True)], False),
            State([Edge("n", 10, True)], False),
            State([Edge(49, 11, False)], False),
            State([Edge(10, 12, False)], False),
            State([Edge(48, 13, False)], False),
            State([Edge(39, 14, False)], False),
            State([Edge(48, 15, False)], False),
            State([Edge("{", 16, True)], False),
            State([Edge(0, 17, False)], False),
            State([Edge(48, 18, False)], False),
            State([Edge("}", 19, True)], False),
            State([Edge(48, 20, False)], False),
            State([], True),
            State([Edge("u", 22, False)], False),
            State([Edge("b", 23, False)], False),
            State([Edge(49, 7, False)], False)], FA.LEFT),
        FA("cls_stmt", [State([Edge(48, 1, False)], False),
            State([Edge(16, 2, False),
                Edge(15, 4, False),
                Edge(17, 3, False)], False),
            State([Edge(";", 3, True)], False),
            State([], True),
            State([Edge(";", 3, True)], False)], FA.LEFT),
        FA("cls_stm_lst", [State([Edge(18, 0, False),
                Edge(48, 1, False)], False),
            State([], True)], FA.LEFT),
        FA("expr", [State([Edge(48, 1, False)], False),
            State([Edge(21, 2, False)], False),
            State([], True)], FA.LEFT),
        FA("or", [State([Edge(22, 1, False)], False),
            State([Edge("o", 2, False)], True),
            State([Edge("r", 3, False)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(22, 1, False)], False)], FA.PRUNE),
        FA("and", [State([Edge(23, 1, False)], False),
            State([Edge("a", 2, False)], True),
            State([Edge("n", 3, False)], False),
            State([Edge("d", 4, False)], False),
            State([Edge(48, 5, False)], False),
            State([Edge(23, 1, False)], False)], FA.PRUNE),
        FA("bitwise_or", [State([Edge(24, 1, False)], False),
            State([Edge("|", 2, False)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(24, 1, False)], False)], FA.PRUNE),
        FA("bitwise_xor", [State([Edge(25, 1, False)], False),
            State([Edge("^", 2, False)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(25, 1, False)], False)], FA.PRUNE),
        FA("bitwise_and", [State([Edge(26, 1, False)], False),
            State([Edge("&", 2, False)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(26, 1, False)], False)], FA.PRUNE),
        FA("eq", [State([Edge(27, 1, False)], False),
            State([Edge("=", 2, False),
                Edge("!", 5, False)], True),
            State([Edge("=", 3, False)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(27, 1, False)], False),
            State([Edge("=", 3, False)], False)], FA.PRUNE),
        FA("rel", [State([Edge(28, 1, False)], False),
            State([Edge("<", 2, False),
                Edge(">", 5, False)], True),
            State([Edge("=", 3, False),
                Edge(48, 4, False)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(28, 1, False)], False),
            State([Edge(48, 4, False),
                Edge("=", 3, False)], False)], FA.PRUNE),
        FA("sum", [State([Edge(29, 1, False)], False),
            State([Edge(["+", "-"], 2, False)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(29, 1, False)], False)], FA.PRUNE),
        FA("prod", [State([Edge(30, 1, False)], False),
            State([Edge(["*", "/"], 2, False)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(30, 1, False)], False)], FA.PRUNE),
        FA("mod", [State([Edge(31, 1, False)], False),
            State([Edge("%", 2, False)], True),
            State([Edge(48, 3, False)], False),
            State([Edge(31, 1, False)], False)], FA.PRUNE),
        FA("power", [State([Edge(32, 1, False)], False),
            State([Edge("*", 2, True)], True),
            State([Edge("*", 3, True)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(32, 1, False)], False)], FA.PRUNE),
        FA("not", [State([Edge("n", 1, False),
                Edge(33, 5, False)], False),
            State([Edge("o", 2, False)], False),
            State([Edge("t", 3, False)], False),
            State([Edge(48, 4, False)], False),
            State([Edge(33, 5, False)], False),
            State([], True)], FA.PRUNE),
        FA("bitwise_not", [State([Edge("~", 1, False),
                Edge(34, 3, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge(34, 3, False)], False),
            State([], True)], FA.PRUNE),
        FA("negation", [State([Edge("-", 1, False),
                Edge(35, 3, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge(35, 3, False)], False),
            State([], True)], FA.PRUNE),
        FA("access", [State([Edge(36, 1, False)], False),
            State([Edge(".", 2, True)], True),
            State([Edge(10, 3, False)], False),
            State([], True)], FA.PRUNE),
        FA("indexing", [State([Edge(37, 1, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge("[", 3, True)], True),
            State([Edge(11, 4, False)], False),
            State([Edge("]", 5, True)], False),
            State([Edge(48, 6, False)], False),
            State([], True)], FA.PRUNE),
        FA("fun_call", [State([Edge(38, 1, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge("(", 3, True)], True),
            State([Edge(11, 4, False)], False),
            State([Edge(")", 5, True)], False),
            State([Edge(48, 6, False)], False),
            State([], True)], FA.PRUNE),
        FA("unary", [State([Edge("(", 1, True),
                Edge(47, 4, False),
                Edge(42, 4, False),
                Edge(40, 4, False),
                Edge(10, 4, False)], False),
            State([Edge(48, 2, False)], False),
            State([Edge(20, 3, False)], False),
            State([Edge(")", 4, True)], False),
            State([], True)], FA.PRUNE),
        FA("type", [State([Edge("s", 1, False),
                Edge("i", 7, False),
                Edge("f", 12, False),
                Edge("b", 19, False),
                Edge("(", 22, True)], False),
            State([Edge("t", 2, False)], False),
            State([Edge("r", 3, False)], False),
            State([Edge("i", 4, False)], False),
            State([Edge("n", 5, False)], False),
            State([Edge("g", 6, False)], False),
            State([], True),
            State([Edge("n", 8, False)], False),
            State([Edge("t", 9, False)], False),
            State([Edge("3", 10, False),
                Edge("6", 11, False)], False),
            State([Edge("2", 6, False)], False),
            State([Edge("4", 6, False)], False),
            State([Edge("l", 13, False)], False),
            State([Edge("o", 14, False)], False),
            State([Edge("a", 15, False)], False),
            State([Edge("t", 16, False)], False),
            State([Edge("3", 17, False),
                Edge("6", 18, False)], False),
            State([Edge("2", 6, False)], False),
            State([Edge("4", 6, False)], False),
            State([Edge("o", 20, False)], False),
            State([Edge("o", 21, False)], False),
            State([Edge("l", 6, False)], False),
            State([Edge(9, 23, False)], False),
            State([Edge(")", 24, True)], False),
            State([Edge(48, 25, False)], False),
            State([Edge(39, 6, False)], False)], FA.LEFT),
        FA("string", [State([Edge("\'", 1, True),
                Edge("\"", 5, True)], False),
            State([Edge(52, 2, False),
                Edge("\'", 3, True)], False),
            State([Edge(41, 1, False)], False),
            State([Edge(48, 4, False)], False),
            State([], True),
            State([Edge(53, 6, False),
                Edge("\"", 7, True)], False),
            State([Edge(41, 5, False)], False),
            State([Edge(48, 4, False)], False)], FA.LEFT),
        FA("char", [State([Edge("\\", 1, False),
                Edge(-1, 2, False)], False),
            State([Edge("\\", 2, False),
                Edge("\'", 2, False),
                Edge("\"", 2, False),
                Edge(["b", "f", "n", "r", "t"], 2, False),
                Edge(["u", "x"], 3, False),
                Edge([(48, 57)], 5, False)], False),
            State([], True),
            State([Edge([(48, 57), (65, 70), (97, 102)], 4, False)], False),
            State([Edge([(48, 57), (65, 70), (97, 102)], 4, False)], True),
            State([Edge([(48, 57)], 5, False)], True)], FA.LEFT),
        FA("boolean", [State([Edge("t", 1, False),
                Edge("f", 6, False)], False),
            State([Edge("r", 2, False)], False),
            State([Edge("u", 3, False)], False),
            State([Edge("e", 4, False)], False),
            State([Edge(48, 5, False)], False),
            State([], True),
            State([Edge("a", 7, False)], False),
            State([Edge("l", 8, False)], False),
            State([Edge("s", 9, False)], False),
            State([Edge("e", 4, False)], False)], FA.LEFT),
        FA("decimal", [State([Edge("0", 1, False),
                Edge([(49, 57)], 3, False)], False),
            State([Edge(54, 2, False)], False),
            State([], True),
            State([Edge([(48, 57)], 3, False),
                Edge(".", 4, False),
                Edge("e", 6, False),
                Edge(48, 2, False)], False),
            State([Edge([(48, 57)], 5, False)], False),
            State([Edge([(48, 57)], 5, False),
                Edge("e", 6, False),
                Edge(48, 2, False)], False),
            State([Edge([(48, 57)], 7, False)], False),
            State([Edge([(48, 57)], 7, False),
                Edge(48, 2, False)], False)], FA.LEFT),
        FA("binary", [State([Edge("0", 1, True)], False),
            State([Edge("b", 2, True)], False),
            State([Edge([(48, 49)], 3, False)], False),
            State([Edge([(48, 49)], 3, False),
                Edge(48, 4, False)], False),
            State([], True)], FA.LEFT),
        FA("octal", [State([Edge("0", 1, True)], False),
            State([Edge([(48, 55)], 2, False)], False),
            State([Edge([(48, 55)], 2, False),
                Edge(48, 3, False)], False),
            State([], True)], FA.LEFT),
        FA("hex", [State([Edge("0", 1, True)], False),
            State([Edge("x", 2, True)], False),
            State([Edge([(48, 57), (65, 70), (97, 102)], 3, False)], False),
            State([Edge([(48, 57), (65, 70), (97, 102)], 3, False),
                Edge(48, 4, False)], False),
            State([], True)], FA.LEFT),
        FA("number", [State([Edge(43, 1, False),
                Edge(44, 1, False),
                Edge(45, 1, False),
                Edge(46, 1, False)], False),
            State([], True)], FA.PRUNE),
        FA("ws", [State([Edge([(9, 10), "\r", " "], 0, False),
                Edge(4, 0, False)], True)], FA.VOID),
        FA("wsp", [State([Edge([(9, 10), "\r", " "], 1, False),
                Edge(4, 1, False)], False),
            State([Edge([(9, 10), "\r", " "], 1, False),
                Edge(4, 1, False)], True)], FA.VOID),
        FA("", [State([Edge("\n", 1, False)], False),
            State([], True)], FA.NEG),
        FA("", [State([Edge("*", 1, False)], False),
            State([Edge("/", 2, False)], False),
            State([], True)], FA.NEG),
        FA("", [State([Edge("\'", 1, False)], False),
            State([], True)], FA.NEG),
        FA("", [State([Edge("\"", 1, False)], False),
            State([], True)], FA.NEG),
        FA("", [State([Edge([(48, 57), "b", "x"], 1, False)], False),
            State([], True)], FA.NEG)]

    def __init__(self):
        WaxeyeParser.__init__(self, Parser.start, Parser.eof_check, Parser.automata)

